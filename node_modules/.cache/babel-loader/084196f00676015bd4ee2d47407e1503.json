{"ast":null,"code":"export const getTodayDataFormatted = () => {\n  const date = new Date();\n  const dateString = new Date(date.getTime() - date.getTimezoneOffset() * 60000).toISOString().split(\"T\")[0];\n  return dateString;\n};\n/**\r\n * returns a random date to be used for list of fiction or non fiction ny times books API call\r\n * @returns {string|*}\r\n */\n\nexport const getRandomDate = () => {\n  //new Date().getFullYear()\n  const dates = [\"2008-06-08\"];\n\n  for (let i = 2009; i <= new Date().getFullYear(); i++) {\n    dates.push(i + \"-01-01\");\n  }\n\n  const randomPublicationDate = dates[Math.floor(Math.random() * dates.length)]; //console.log(`getRandomDate() = randomPublicationDate ${randomPublicationDate}`)\n\n  return randomPublicationDate;\n};","map":{"version":3,"sources":["C:/Eclipse/React/book-suggestion/src/util/datesUtil.js"],"names":["getTodayDataFormatted","date","Date","dateString","getTime","getTimezoneOffset","toISOString","split","getRandomDate","dates","i","getFullYear","push","randomPublicationDate","Math","floor","random","length"],"mappings":"AAAA,OAAO,MAAMA,qBAAqB,GAAG,MAAM;AACvC,QAAMC,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACA,QAAMC,UAAU,GAAG,IAAID,IAAJ,CAASD,IAAI,CAACG,OAAL,KAAkBH,IAAI,CAACI,iBAAL,KAA2B,KAAtD,EACdC,WADc,GAEdC,KAFc,CAER,GAFQ,EAEH,CAFG,CAAnB;AAGA,SAAOJ,UAAP;AACH,CANM;AAQP;;;;;AAIA,OAAO,MAAMK,aAAa,GAAG,MAAM;AAC/B;AACA,QAAMC,KAAK,GAAG,CAAC,YAAD,CAAd;;AACA,OAAI,IAAIC,CAAC,GAAC,IAAV,EAAeA,CAAC,IAAE,IAAIR,IAAJ,GAAWS,WAAX,EAAlB,EAA2CD,CAAC,EAA5C,EAA+C;AAC3CD,IAAAA,KAAK,CAACG,IAAN,CAAWF,CAAC,GAAC,QAAb;AACH;;AACD,QAAMG,qBAAqB,GAAGJ,KAAK,CAACK,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBP,KAAK,CAACQ,MAAjC,CAAD,CAAnC,CAN+B,CAO/B;;AACA,SAAOJ,qBAAP;AACH,CATM","sourcesContent":["export const getTodayDataFormatted = () => {\r\n    const date = new Date();\r\n    const dateString = new Date(date.getTime() - (date.getTimezoneOffset() * 60000))\r\n        .toISOString()\r\n        .split(\"T\")[0];\r\n    return dateString\r\n};\r\n\r\n/**\r\n * returns a random date to be used for list of fiction or non fiction ny times books API call\r\n * @returns {string|*}\r\n */\r\nexport const getRandomDate = () => {\r\n    //new Date().getFullYear()\r\n    const dates = [\"2008-06-08\"]\r\n    for(let i=2009;i<=new Date().getFullYear();i++){\r\n        dates.push(i+\"-01-01\")\r\n    }\r\n    const randomPublicationDate = dates[Math.floor(Math.random() * dates.length)]\r\n    //console.log(`getRandomDate() = randomPublicationDate ${randomPublicationDate}`)\r\n    return randomPublicationDate\r\n}"]},"metadata":{},"sourceType":"module"}