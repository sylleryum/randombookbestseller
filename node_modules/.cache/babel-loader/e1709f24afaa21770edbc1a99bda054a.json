{"ast":null,"code":"import axios from 'axios';\nconst endPoint = 'https://api.nytimes.com/svc/books/v3';\nlet date = '';\nlet fiction = `/lists/${date}/Hardcover Nonfiction.json`;\nconst key = '?api-key=yIY9ATTla1XKYKfDb1cb9pMz4kXKMiJK';\n/**\r\n *\r\n * @returns {today's date formatted as yyyy-mm-dd}\r\n */\n\nconst getTodayDataFormatted = () => {\n  var date = new Date();\n  var dateString = new Date(date.getTime() - date.getTimezoneOffset() * 60000).toISOString().split(\"T\")[0];\n  return dateString;\n};\n/**\r\n *\r\n * @param date date of the publication, should be in the format yyyy-mm-dd (getTodayDataFormatted() returns in this format)\r\n * @returns {Promise<*>}\r\n */\n\n\nconst fetchDataNy = async date => {\n  date = getTodayDataFormatted();\n  const url = endPoint + fiction + key;\n\n  try {\n    console.log(\"-----\" + endPoint + fiction + key);\n    const {\n      data: {\n        results: {\n          books\n        }\n      }\n    } = await axios.get(endPoint + fiction + key); //console.log(books)\n\n    return books;\n  } catch (error) {\n    console.log(`error ${error}`);\n    return error;\n  }\n};\n\nexport default fetchDataNy;","map":{"version":3,"sources":["c:/eclipse/react/book-suggestion/src/api/fetchDataNy.js"],"names":["axios","endPoint","date","fiction","key","getTodayDataFormatted","Date","dateString","getTime","getTimezoneOffset","toISOString","split","fetchDataNy","url","console","log","data","results","books","get","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,QAAQ,GAAG,sCAAjB;AACA,IAAIC,IAAI,GAAG,EAAX;AACA,IAAIC,OAAO,GAAI,UAASD,IAAK,4BAA7B;AACA,MAAME,GAAG,GAAG,2CAAZ;AAEA;;;;;AAIA,MAAMC,qBAAqB,GAAG,MAAM;AAChC,MAAIH,IAAI,GAAG,IAAII,IAAJ,EAAX;AACA,MAAIC,UAAU,GAAG,IAAID,IAAJ,CAASJ,IAAI,CAACM,OAAL,KAAkBN,IAAI,CAACO,iBAAL,KAA2B,KAAtD,EACZC,WADY,GAEZC,KAFY,CAEN,GAFM,EAED,CAFC,CAAjB;AAGA,SAAOJ,UAAP;AACH,CAND;AAQA;;;;;;;AAKA,MAAMK,WAAW,GAAG,MAAOV,IAAP,IAAgB;AAChCA,EAAAA,IAAI,GAAGG,qBAAqB,EAA5B;AACA,QAAMQ,GAAG,GAAGZ,QAAQ,GAACE,OAAT,GAAiBC,GAA7B;;AACA,MAAI;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAQd,QAAR,GAAiBE,OAAjB,GAAyBC,GAArC;AACA,UAAM;AAACY,MAAAA,IAAI,EAAE;AAACC,QAAAA,OAAO,EAAC;AAACC,UAAAA;AAAD;AAAT;AAAP,QAA4B,MAAMlB,KAAK,CAACmB,GAAN,CAAUlB,QAAQ,GAACE,OAAT,GAAiBC,GAA3B,CAAxC,CAFA,CAGA;;AACA,WAAOc,KAAP;AACH,GALD,CAKE,OAAOE,KAAP,EAAc;AACZN,IAAAA,OAAO,CAACC,GAAR,CAAa,SAAQK,KAAM,EAA3B;AAEA,WAAOA,KAAP;AACH;AACJ,CAbD;;AAeA,eAAeR,WAAf","sourcesContent":["import axios from 'axios';\r\n\r\nconst endPoint = 'https://api.nytimes.com/svc/books/v3';\r\nlet date = ''\r\nlet fiction = `/lists/${date}/Hardcover Nonfiction.json`\r\nconst key = '?api-key=yIY9ATTla1XKYKfDb1cb9pMz4kXKMiJK'\r\n\r\n/**\r\n *\r\n * @returns {today's date formatted as yyyy-mm-dd}\r\n */\r\nconst getTodayDataFormatted = () => {\r\n    var date = new Date();\r\n    var dateString = new Date(date.getTime() - (date.getTimezoneOffset() * 60000 ))\r\n        .toISOString()\r\n        .split(\"T\")[0];\r\n    return dateString\r\n};\r\n\r\n/**\r\n *\r\n * @param date date of the publication, should be in the format yyyy-mm-dd (getTodayDataFormatted() returns in this format)\r\n * @returns {Promise<*>}\r\n */\r\nconst fetchDataNy = async (date) => {\r\n    date = getTodayDataFormatted();\r\n    const url = endPoint+fiction+key;\r\n    try {\r\n        console.log(\"-----\"+endPoint+fiction+key)\r\n        const {data: {results:{books}}} = await axios.get(endPoint+fiction+key);\r\n        //console.log(books)\r\n        return books;\r\n    } catch (error) {\r\n        console.log(`error ${error}`)\r\n\r\n        return error;\r\n    }\r\n}\r\n\r\nexport default fetchDataNy\r\n"]},"metadata":{},"sourceType":"module"}