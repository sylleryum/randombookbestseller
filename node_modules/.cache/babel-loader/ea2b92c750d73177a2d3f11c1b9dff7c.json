{"ast":null,"code":"var _jsxFileName = \"c:\\\\eclipse\\\\react\\\\book-suggestion\\\\src\\\\App.js\";\nimport React, { Fragment } from 'react';\nimport './App.css';\nimport fetchDataNyYear, { fetchDataNySingle } from \"./api/fetchDataNyYear\";\nimport { getRandomDate } from \"./util/datesUtil\";\nimport { fetchDataGr } from \"./api/fetchDataGr\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      books: [],\n      book: {}\n    };\n  }\n\n  async componentDidMount() {\n    const books = await fetchDataNyYear(getRandomDate(), 0);\n    const book = await fetchDataNySingle(getRandomDate(), 0);\n    this.setState({\n      books,\n      book\n    });\n    await fetchDataGr(\"0316037915\");\n  }\n\n  render() {\n    let display;\n    let randomTitle;\n    console.log(`oooooooooooo`);\n    console.log(this.state.book);\n\n    if (this.state.books.length) {\n      display = this.state.books.map((item, i) => /*#__PURE__*/React.createElement(\"div\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }\n      }, item.title));\n    } else {\n      display = 'loading...';\n    }\n\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, \"Titles: \", this.state.book ? this.state.book.title : \"\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 69\n      }\n    }), display);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["c:/eclipse/react/book-suggestion/src/App.js"],"names":["React","Fragment","fetchDataNyYear","fetchDataNySingle","getRandomDate","fetchDataGr","App","Component","state","books","book","componentDidMount","setState","render","display","randomTitle","console","log","length","map","item","i","title"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,WAAP;AACA,OAAOC,eAAP,IAAyBC,iBAAzB,QAAiD,uBAAjD;AACA,SAAQC,aAAR,QAA4B,kBAA5B;AACA,SAAQC,WAAR,QAA0B,mBAA1B;;AAEA,MAAMC,GAAN,SAAkBN,KAAK,CAACO,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAC9BC,KAD8B,GACtB;AACJC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,IAAI,EAAC;AAFD,KADsB;AAAA;;AAO9B,QAAMC,iBAAN,GAA0B;AACtB,UAAMF,KAAK,GAAG,MAAMP,eAAe,CAACE,aAAa,EAAd,EAAiB,CAAjB,CAAnC;AACA,UAAMM,IAAI,GAAG,MAAMP,iBAAiB,CAACC,aAAa,EAAd,EAAiB,CAAjB,CAApC;AACA,SAAKQ,QAAL,CAAc;AAACH,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAAd;AACA,UAAML,WAAW,CAAC,YAAD,CAAjB;AACH;;AAEDQ,EAAAA,MAAM,GAAG;AACL,QAAIC,OAAJ;AACA,QAAIC,WAAJ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAa,cAAb;AACID,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAL,CAAWE,IAAvB;;AACJ,QAAI,KAAKF,KAAL,CAAWC,KAAX,CAAiBS,MAArB,EAA4B;AAExBJ,MAAAA,OAAO,GAAG,KAAKN,KAAL,CAAWC,KAAX,CAAiBU,GAAjB,CAAqB,CAACC,IAAD,EAAOC,CAAP,kBAC3B;AAAK,QAAA,GAAG,EAAEA,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAcD,IAAI,CAACE,KAAnB,CADM,CAAV;AAEH,KAJD,MAIM;AACFR,MAAAA,OAAO,GAAG,YAAV;AACH;;AAED,wBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACa,KAAKN,KAAL,CAAWE,IAAX,GAAiB,KAAKF,KAAL,CAAWE,IAAX,CAAgBY,KAAjC,GAAwC,EADrD,eACwD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADxD,EAEKR,OAFL,CADJ;AAOH;;AAlC6B;;AAsClC,eAAeR,GAAf","sourcesContent":["import React, {Fragment} from 'react';\nimport './App.css';\nimport fetchDataNyYear, {fetchDataNySingle} from \"./api/fetchDataNyYear\";\nimport {getRandomDate} from \"./util/datesUtil\";\nimport {fetchDataGr} from \"./api/fetchDataGr\";\n\nclass App extends React.Component {\n    state = {\n        books: [],\n        book:{}\n        \n    }\n\n    async componentDidMount() {\n        const books = await fetchDataNyYear(getRandomDate(),0);\n        const book = await fetchDataNySingle(getRandomDate(),0)\n        this.setState({books, book})\n        await fetchDataGr(\"0316037915\")\n    }\n\n    render() {\n        let display\n        let randomTitle\n        console.log(`oooooooooooo`)\n            console.log(this.state.book)\n        if (this.state.books.length){\n\n            display = this.state.books.map((item, i) =>\n                <div key={i}>{item.title}</div>)\n        } else{\n            display = 'loading...'\n        }\n\n        return (\n            <Fragment>\n                Titles: {this.state.book? this.state.book.title: \"\"}<br/>\n                {display}\n            </Fragment>\n        );\n\n    }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}