{"ast":null,"code":"export var getTodayDataFormatted=function getTodayDataFormatted(){var date=new Date();var dateString=new Date(date.getTime()-date.getTimezoneOffset()*60000).toISOString().split(\"T\")[0];return dateString;};/**\r\n * returns a random date to be used for list of fiction or non fiction ny times books API call\r\n * @returns {string|*}\r\n */export var getRandomDate=function getRandomDate(){//new Date().getFullYear()\nvar dates=[\"2008-06-08\"];for(var i=2009;i<=new Date().getFullYear();i++){dates.push(i+\"-01-01\");}var randomPublicationDate=dates[Math.floor(Math.random()*dates.length)];//console.log(`getRandomDate() = randomPublicationDate ${randomPublicationDate}`)\nreturn randomPublicationDate;};","map":{"version":3,"sources":["C:/eclipse/React/book-suggestion/src/util/datesUtil.js"],"names":["getTodayDataFormatted","date","Date","dateString","getTime","getTimezoneOffset","toISOString","split","getRandomDate","dates","i","getFullYear","push","randomPublicationDate","Math","floor","random","length"],"mappings":"AAAA,MAAO,IAAMA,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,EAAM,CACvC,GAAMC,CAAAA,IAAI,CAAG,GAAIC,CAAAA,IAAJ,EAAb,CACA,GAAMC,CAAAA,UAAU,CAAG,GAAID,CAAAA,IAAJ,CAASD,IAAI,CAACG,OAAL,GAAkBH,IAAI,CAACI,iBAAL,GAA2B,KAAtD,EACdC,WADc,GAEdC,KAFc,CAER,GAFQ,EAEH,CAFG,CAAnB,CAGA,MAAOJ,CAAAA,UAAP,CACH,CANM,CAQP;;;GAIA,MAAO,IAAMK,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC/B;AACA,GAAMC,CAAAA,KAAK,CAAG,CAAC,YAAD,CAAd,CACA,IAAI,GAAIC,CAAAA,CAAC,CAAC,IAAV,CAAeA,CAAC,EAAE,GAAIR,CAAAA,IAAJ,GAAWS,WAAX,EAAlB,CAA2CD,CAAC,EAA5C,CAA+C,CAC3CD,KAAK,CAACG,IAAN,CAAWF,CAAC,CAAC,QAAb,EACH,CACD,GAAMG,CAAAA,qBAAqB,CAAGJ,KAAK,CAACK,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgBP,KAAK,CAACQ,MAAjC,CAAD,CAAnC,CACA;AACA,MAAOJ,CAAAA,qBAAP,CACH,CATM","sourcesContent":["export const getTodayDataFormatted = () => {\r\n    const date = new Date();\r\n    const dateString = new Date(date.getTime() - (date.getTimezoneOffset() * 60000))\r\n        .toISOString()\r\n        .split(\"T\")[0];\r\n    return dateString\r\n};\r\n\r\n/**\r\n * returns a random date to be used for list of fiction or non fiction ny times books API call\r\n * @returns {string|*}\r\n */\r\nexport const getRandomDate = () => {\r\n    //new Date().getFullYear()\r\n    const dates = [\"2008-06-08\"]\r\n    for(let i=2009;i<=new Date().getFullYear();i++){\r\n        dates.push(i+\"-01-01\")\r\n    }\r\n    const randomPublicationDate = dates[Math.floor(Math.random() * dates.length)]\r\n    //console.log(`getRandomDate() = randomPublicationDate ${randomPublicationDate}`)\r\n    return randomPublicationDate\r\n}"]},"metadata":{},"sourceType":"module"}