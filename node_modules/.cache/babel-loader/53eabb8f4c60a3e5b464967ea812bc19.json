{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Eclipse\\\\React\\\\book-suggestion\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Eclipse\\\\React\\\\book-suggestion\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import axios from'axios';import{getTodayDataFormatted}from\"../util/datesUtil\";import*as https from\"https\";var endPoint='https://api.nytimes.com/svc/books/v3';var fiction=function fiction(date){return\"/lists/\".concat(date,\"/Hardcover fiction.json\");};var nonFiction=function nonFiction(date){return\"/lists/\".concat(date,\"/Hardcover nonfiction.json\");};var key='?api-key=yIY9ATTla1XKYKfDb1cb9pMz4kXKMiJK';//available publications: https://api.nytimes.com/svc/books/v3/lists/names.json?api-key=yIY9ATTla1XKYKfDb1cb9pMz4kXKMiJK\n/**\r\n *\r\n * @param date of the publication, should be in the format yyyy-mm-dd (getTodayDataFormatted() or getRandomDate() can be used to get it)\r\n * @param category 0 for fiction, 1 for non fiction\r\n * @returns {Promise<[books]>}\r\n */export var fetchDataNyYear=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(date,category){var url,httpsAgent,_yield$axios$get,books;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(date===undefined){date=getTodayDataFormatted();}console.log(\"4 - category fetchdatanyyear\");console.log(category);console.log(category==0?true:false);url=category==0?endPoint+fiction(date)+key:endPoint+nonFiction(date)+key;//url = endPoint + fiction(date) + key;\nconsole.log(\"-url: \"+url+\" category: \"+category);_context.prev=6;httpsAgent=new https.Agent({rejectUnauthorized:false});_context.next=10;return axios.get(url,{httpsAgent:httpsAgent});case 10:_yield$axios$get=_context.sent;books=_yield$axios$get.data.results.books;return _context.abrupt(\"return\",books.map(function(i){// console.log(`fetchdatanyyear`)\n// console.log(i)\nreturn{primary_isbn10:i.primary_isbn10,publisher:i.publisher,description:i.description,title:i.title,author:i.author,book_image:i.book_image};}));case 15:_context.prev=15;_context.t0=_context[\"catch\"](6);console.log(\"error fetchDataNy: \".concat(_context.t0));return _context.abrupt(\"return\",_context.t0);case 19:case\"end\":return _context.stop();}}},_callee,null,[[6,15]]);}));return function fetchDataNyYear(_x,_x2){return _ref.apply(this,arguments);};}();/**\r\n *\r\n * @param date of the publication, should be in the format yyyy-mm-dd (getTodayDataFormatted() or getRandomDate() can be used to get it)\r\n * @param category 0 for fiction, 1 for non fiction\r\n * @returns {Promise<books>} single book\r\n */export var fetchDataNySingle=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(date,category){var result;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetchDataNyYear(date,category);case 2:result=_context2.sent;return _context2.abrupt(\"return\",result[Math.floor(Math.random()*result.length)]);case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function fetchDataNySingle(_x3,_x4){return _ref2.apply(this,arguments);};}();","map":{"version":3,"sources":["C:/Eclipse/React/book-suggestion/src/api/fetchDataNy.js"],"names":["axios","getTodayDataFormatted","https","endPoint","fiction","date","nonFiction","key","fetchDataNyYear","category","undefined","console","log","url","httpsAgent","Agent","rejectUnauthorized","get","books","data","results","map","i","primary_isbn10","publisher","description","title","author","book_image","fetchDataNySingle","result","Math","floor","random","length"],"mappings":"2TAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,qBAAR,KAAoC,mBAApC,CACA,MAAO,GAAKC,CAAAA,KAAZ,KAAuB,OAAvB,CAEA,GAAMC,CAAAA,QAAQ,CAAG,sCAAjB,CACA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,IAAD,yBAAoBA,IAApB,6BAAhB,CACA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACD,IAAD,yBAAoBA,IAApB,gCAAnB,CACA,GAAME,CAAAA,GAAG,CAAG,2CAAZ,CACA;AAEA;;;;;GAMA,MAAO,IAAMC,CAAAA,eAAe,0FAAG,iBAAOH,IAAP,CAAaI,QAAb,4JAC3B,GAAIJ,IAAI,GAAKK,SAAb,CAAwB,CACpBL,IAAI,CAAGJ,qBAAqB,EAA5B,CACH,CACDU,OAAO,CAACC,GAAR,iCACAD,OAAO,CAACC,GAAR,CAAYH,QAAZ,EACAE,OAAO,CAACC,GAAR,CAAYH,QAAQ,EAAI,CAAZ,CAAgB,IAAhB,CAAuB,KAAnC,EACMI,GAPqB,CAOfJ,QAAQ,EAAI,CAAZ,CAAgBN,QAAQ,CAAGC,OAAO,CAACC,IAAD,CAAlB,CAA2BE,GAA3C,CAAiDJ,QAAQ,CAAGG,UAAU,CAACD,IAAD,CAArB,CAA8BE,GAPhE,CAQ3B;AACAI,OAAO,CAACC,GAAR,CAAY,SAAWC,GAAX,CAAiB,aAAjB,CAAiCJ,QAA7C,EAT2B,gBAYjBK,UAZiB,CAYJ,GAAIZ,CAAAA,KAAK,CAACa,KAAV,CAAgB,CAAEC,kBAAkB,CAAE,KAAtB,CAAhB,CAZI,wBAakBhB,CAAAA,KAAK,CAACiB,GAAN,CAAUJ,GAAV,CAAe,CAAEC,UAAU,CAAEA,UAAd,CAAf,CAblB,wCAaCI,KAbD,kBAahBC,IAbgB,CAaTC,OAbS,CAaCF,KAbD,iCAchBA,KAAK,CAACG,GAAN,CAAU,SAACC,CAAD,CAAO,CACpB;AACA;AACA,MAAO,CAEHC,cAAc,CAAED,CAAC,CAACC,cAFf,CAGHC,SAAS,CAAEF,CAAC,CAACE,SAHV,CAIHC,WAAW,CAAEH,CAAC,CAACG,WAJZ,CAKHC,KAAK,CAAEJ,CAAC,CAACI,KALN,CAMHC,MAAM,CAAEL,CAAC,CAACK,MANP,CAOHC,UAAU,CAAEN,CAAC,CAACM,UAPX,CAAP,CASH,CAZM,CAdgB,4DA4BvBjB,OAAO,CAACC,GAAR,4CA5BuB,kHAAH,kBAAfJ,CAAAA,eAAe,gDAArB,CAkCP;;;;;GAMA,MAAO,IAAMqB,CAAAA,iBAAiB,2FAAG,kBAAOxB,IAAP,CAAaI,QAAb,wJAERD,CAAAA,eAAe,CAACH,IAAD,CAAOI,QAAP,CAFP,QAEvBqB,MAFuB,iDAItBA,MAAM,CAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgBH,MAAM,CAACI,MAAlC,CAAD,CAJgB,0DAAH,kBAAjBL,CAAAA,iBAAiB,kDAAvB","sourcesContent":["import axios from 'axios';\r\nimport {getTodayDataFormatted} from \"../util/datesUtil\";\r\nimport * as https from \"https\";\r\n\r\nconst endPoint = 'https://api.nytimes.com/svc/books/v3';\r\nconst fiction = (date) => `/lists/${date}/Hardcover fiction.json`\r\nconst nonFiction = (date) => `/lists/${date}/Hardcover nonfiction.json`\r\nconst key = '?api-key=yIY9ATTla1XKYKfDb1cb9pMz4kXKMiJK'\r\n//available publications: https://api.nytimes.com/svc/books/v3/lists/names.json?api-key=yIY9ATTla1XKYKfDb1cb9pMz4kXKMiJK\r\n\r\n/**\r\n *\r\n * @param date of the publication, should be in the format yyyy-mm-dd (getTodayDataFormatted() or getRandomDate() can be used to get it)\r\n * @param category 0 for fiction, 1 for non fiction\r\n * @returns {Promise<[books]>}\r\n */\r\nexport const fetchDataNyYear = async (date, category) => {\r\n    if (date === undefined) {\r\n        date = getTodayDataFormatted();\r\n    }\r\n    console.log(`4 - category fetchdatanyyear`)\r\n    console.log(category)\r\n    console.log(category == 0 ? true : false)\r\n    const url = category == 0 ? endPoint + fiction(date) + key : endPoint + nonFiction(date) + key\r\n    //url = endPoint + fiction(date) + key;\r\n    console.log(\"-url: \" + url + \" category: \" + category)\r\n\r\n    try {\r\n        const httpsAgent = new https.Agent({ rejectUnauthorized: false });\r\n        const {data: {results: {books}}} = await axios.get(url, { httpsAgent: httpsAgent });\r\n        return books.map((i) => {\r\n            // console.log(`fetchdatanyyear`)\r\n            // console.log(i)\r\n            return {\r\n\r\n                primary_isbn10: i.primary_isbn10,\r\n                publisher: i.publisher,\r\n                description: i.description,\r\n                title: i.title,\r\n                author: i.author,\r\n                book_image: i.book_image\r\n            }\r\n        });\r\n    } catch (error) {\r\n        console.log(`error fetchDataNy: ${error}`)\r\n\r\n        return error;\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n * @param date of the publication, should be in the format yyyy-mm-dd (getTodayDataFormatted() or getRandomDate() can be used to get it)\r\n * @param category 0 for fiction, 1 for non fiction\r\n * @returns {Promise<books>} single book\r\n */\r\nexport const fetchDataNySingle = async (date, category) => {\r\n    //this.state.books[Math.floor(Math.random() * this.state.books.length)].title\r\n    const result = await fetchDataNyYear(date, category)\r\n\r\n    return result[Math.floor(Math.random() * result.length)]\r\n};\r\n"]},"metadata":{},"sourceType":"module"}